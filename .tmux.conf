# TMUX CONFIGURATION

# see https://github.com/tmux-plugins/tmux-sensible
set -g @almost-sensible 'on'

# allow dynamic cursor and italics in vim
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# make sure we always start at 1, even when invoked from a .tmux wrapper script
set-environment -g SHLVL 1

# remap prefix from 'C-b' to 'C-a'
unbind C-b
if-shell -b "[[ -n $SSH_CONNECTION ]]" \
    "set-option -g prefix C-q; bind-key C-q send-prefix" \
    "set-option -g prefix C-a; bind-key C-a send-prefix"

# configuration of the status line
bind '\' set -g status
if-shell "[[ $(tmux lsw | wc -l) -le 1 ]]" 'set -g status'
set -g status-left-length 32
set -g status-right-length 150
set -g status-fg white
set -g status-bg colour234

set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=black,bg=brightwhite,bold
set -g window-status-bell-style fg=brightred,bg=yellow,bold
set -g window-status-activity-style bg=red

#set -g pane-border-fg colour245
#set -g pane-active-border-fg colour39
#set -g message-fg black
#set -g message-bg brightwhite
#set -g message-attr bold
#set -g window-status-bell-attr bold
#set -g window-status-bell-bg yellow
#set -g window-status-activity-bg red
#set -g window-status-bell-fg brightred

set -g base-index 1
setw -g pane-base-index 1

#set -g status-left '#[fg=colour15,bg=colour11,bold] #S #[fg=white,bg=black] '
#defaultdispfg="#[fg=colour15]"
#defaultdispbg="#[bg=colour0]"
#prefixdispfg="#[fg=colour25]"
#prefixdispbg="#[bg=colour39]"
#plaindisp="#[fg=white,bg=black]"
#set -g status-left "#[bold]#{?client_prefix,$prefixdispbg,$defaultdispbg}#{?client_prefix,$prefixdispfg,$defaultdispfg} #S $plaindisp "
#set -g status-left "#{?client_prefix,#[reverse],} #S #[noreverse]$plaindisp "
#set -g status-right ""

set -g status-left "#(if [[ $(tmux ls | wc -l) -gt 1 ]]; then tmux display-message -p '#[bg=colour15]#[fg=colour67]#[bold] #S #[bg=black] '; fi)"
set -g window-status-format "#(if [[ $(tmux display-message -p '#{window_panes}') -gt 1 ]]; then echo '#[fg=brightwhite]'; fi) #W #[bg=black] "
#set -g window-status-format "#[fg=white]#[bg=colour234] #W "
set -g window-status-separator ""
set -g window-status-current-format "#[fg=colour25]#{?client_prefix,#[bg=colour45],#[bg=colour39]}#[noreverse]#[bold] #W #[bg=black] "
set -g status-right "#[bg=black] #[bg=colour234]#(tmux-spotify-info) %a %d %b, %I:%M %p"

# position the status bar at top of screen
set-option -g status-position top

# visual notification of activity in other windows
#setw -g monitor-activity on
#set -g window-status-activity-attr bold
#set -g visual-bell on

# automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# dynamically update window titles
set -g allow-rename 1
set -g automatic-rename 1
set -g set-titles off # set title with macOS term proxy-title instead
set-option -g set-titles-string '#W'  # program name

# increase history limit up from default of 2000
set -g history-limit 100000

# split panes open in same working directory
bind '"' split-window -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind 'a' last-window
bind 'w' choose-window -Z -F "#W #F"
bind 'C-Space' next-layout

# mouse control
set-option -g -q mouse on

# rotate panes while zoomed
bind 'C-o' if-shell 'test #{window_zoomed_flag} -eq 1' 'rotate-window; resize-pane -Z' 'rotate-window'

# move windows
bind '<' swap-window -t -1
bind '>' swap-window -t +1

# switch to last window
bind '9' select-window -t '{end}'
bind '0' select-window -t '{start}'

# incremental search up of buffer
bind-key -T copy-mode-vi / command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind-key '/' copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind-key '?' copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# search back to last prompt
bind-key 'b' copy-mode\; send -X search-backward "# $USER"

# setup 'v' to begin selection as in Vim
set-window-option -g mode-keys vi
unbind-key -T copy-mode-vi 'v'
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"  # macOS
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# stay in copy mode on drag end.
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# clear selection on click; makes for nicer consecutive drags.
bind-key -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection

# scroll 1 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane send-keys -X clear-selection\; send-keys -X -N 1 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X clear-selection\; send-keys -X -N 1 scroll-down

# make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -X select-line"

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
#set -w -g wrap-search off

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
#set -g @plugin 'tmux-plugins/tmux-copycat'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run -b '~/.tmux/plugins/tpm/tpm'
